'use client';

import React, { useState } from 'react';
import BankTransactionManager from '../../components/BankTransactionManager';
import { useBankTransaction } from '../../hooks/useBankTransaction';

const BankTransactionsPage = () => {
  const [expectedKeywords, setExpectedKeywords] = useState<string[]>([
    'napavatar', 'shoptao', 'thanhtoan', 'nguyen trong thuong'
  ]);
  const [orderMapping, setOrderMapping] = useState<{ [key: string]: string }>({
    '10000': 'order_123',
    '20000': 'order_456',
    '50000': 'order_789'
  });

  const { autoProcessNewTransactions, loading, error, success } = useBankTransaction();

  const handleAutoProcess = async () => {
    await autoProcessNewTransactions(expectedKeywords, orderMapping);
  };

  const addKeyword = () => {
    const newKeyword = prompt('Nh·∫≠p t·ª´ kh√≥a m·ªõi:');
    if (newKeyword && !expectedKeywords.includes(newKeyword)) {
      setExpectedKeywords([...expectedKeywords, newKeyword]);
    }
  };

  const removeKeyword = (keyword: string) => {
    setExpectedKeywords(expectedKeywords.filter(k => k !== keyword));
  };

  const addOrderMapping = () => {
    const amount = prompt('Nh·∫≠p s·ªë ti·ªÅn:');
    const orderId = prompt('Nh·∫≠p ID ƒë∆°n h√†ng:');
    if (amount && orderId) {
      setOrderMapping({ ...orderMapping, [amount]: orderId });
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-7xl mx-auto px-4">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-4">
            H·ªá th·ªëng Thanh to√°n T·ª± ƒë·ªông
          </h1>
          <p className="text-gray-600">
            Qu·∫£n l√Ω v√† t·ª± ƒë·ªông x·ª≠ l√Ω giao d·ªãch ng√¢n h√†ng d·ª±a tr√™n n·ªôi dung m√¥ t·∫£
          </p>
        </div>

        {/* C·∫•u h√¨nh */}
        <div className="bg-white rounded-lg shadow-lg p-6 mb-8">
          <h2 className="text-xl font-semibold mb-4">C·∫•u h√¨nh H·ªá th·ªëng</h2>
          
          {/* T·ª´ kh√≥a mong ƒë·ª£i */}
          <div className="mb-6">
            <h3 className="text-lg font-medium mb-3">T·ª´ kh√≥a mong ƒë·ª£i trong description:</h3>
            <div className="flex flex-wrap gap-2 mb-3">
              {expectedKeywords.map((keyword, index) => (
                <span
                  key={index}
                  className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm flex items-center gap-2"
                >
                  {keyword}
                  <button
                    onClick={() => removeKeyword(keyword)}
                    className="text-blue-600 hover:text-blue-800"
                  >
                    √ó
                  </button>
                </span>
              ))}
            </div>
            <button
              onClick={addKeyword}
              className="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg text-sm"
            >
              + Th√™m t·ª´ kh√≥a
            </button>
          </div>

          {/* Mapping ƒë∆°n h√†ng */}
          <div className="mb-6">
            <h3 className="text-lg font-medium mb-3">Mapping s·ªë ti·ªÅn - ID ƒë∆°n h√†ng:</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-3">
              {Object.entries(orderMapping).map(([amount, orderId]) => (
                <div
                  key={amount}
                  className="bg-green-100 p-3 rounded-lg flex justify-between items-center"
                >
                  <span className="text-green-800">
                    {parseInt(amount).toLocaleString('vi-VN')} VND ‚Üí {orderId}
                  </span>
                  <button
                    onClick={() => {
                      const newMapping = { ...orderMapping };
                      delete newMapping[amount];
                      setOrderMapping(newMapping);
                    }}
                    className="text-green-600 hover:text-green-800"
                  >
                    √ó
                  </button>
                </div>
              ))}
            </div>
            <button
              onClick={addOrderMapping}
              className="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg text-sm"
            >
              + Th√™m mapping
            </button>
          </div>

          {/* N√∫t x·ª≠ l√Ω t·ª± ƒë·ªông */}
          <div className="border-t pt-4">
            <button
              onClick={handleAutoProcess}
              disabled={loading}
              className="bg-purple-500 hover:bg-purple-600 text-white px-6 py-3 rounded-lg font-medium disabled:opacity-50"
            >
              {loading ? 'ƒêang x·ª≠ l√Ω...' : 'üöÄ X·ª≠ l√Ω T·ª± ƒë·ªông T·∫•t c·∫£ Giao d·ªãch'}
            </button>
            <p className="text-sm text-gray-600 mt-2">
              T·ª± ƒë·ªông fetch giao d·ªãch m·ªõi, ki·ªÉm tra description v√† c·∫≠p nh·∫≠t tr·∫°ng th√°i
            </p>
          </div>

          {/* Th√¥ng b√°o */}
          {error && (
            <div className="mt-4 p-4 bg-red-50 border border-red-200 rounded-lg">
              <p className="text-red-800">{error}</p>
            </div>
          )}
          {success && (
            <div className="mt-4 p-4 bg-green-50 border border-green-200 rounded-lg">
              <p className="text-green-800">{success}</p>
            </div>
          )}
        </div>

        {/* Component qu·∫£n l√Ω giao d·ªãch */}
        <BankTransactionManager
          expectedKeywords={expectedKeywords}
          orderMapping={orderMapping}
        />

        {/* H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng */}
        <div className="bg-white rounded-lg shadow-lg p-6 mt-8">
          <h2 className="text-xl font-semibold mb-4">H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng</h2>
          <div className="space-y-4 text-gray-700">
            <div>
              <h3 className="font-medium text-gray-900">1. C·∫•u h√¨nh t·ª´ kh√≥a:</h3>
              <p>Th√™m c√°c t·ª´ kh√≥a m√† b·∫°n mong ƒë·ª£i xu·∫•t hi·ªán trong description c·ªßa giao d·ªãch h·ª£p l·ªá.</p>
            </div>
            <div>
              <h3 className="font-medium text-gray-900">2. Mapping ƒë∆°n h√†ng:</h3>
              <p>Li√™n k·∫øt s·ªë ti·ªÅn giao d·ªãch v·ªõi ID ƒë∆°n h√†ng ƒë·ªÉ t·ª± ƒë·ªông match.</p>
            </div>
            <div>
              <h3 className="font-medium text-gray-900">3. X·ª≠ l√Ω t·ª± ƒë·ªông:</h3>
              <p>H·ªá th·ªëng s·∫Ω t·ª± ƒë·ªông ki·ªÉm tra description v√† chuy·ªÉn tr·∫°ng th√°i th√†nh c√¥ng n·∫øu c√≥ t·ª´ kh√≥a ph√π h·ª£p.</p>
            </div>
            <div>
              <h3 className="font-medium text-gray-900">4. V√≠ d·ª• giao d·ªãch h·ª£p l·ªá:</h3>
              <p className="bg-gray-100 p-3 rounded font-mono text-sm">
                "REM Tfr Ac:1770260769 O@L_080005_211601_0_0_202419501_92905827637 0785776411 NAPAVATAR 2300"
              </p>
              <p className="text-sm text-gray-600 mt-1">
                Giao d·ªãch n√†y s·∫Ω ƒë∆∞·ª£c x√°c nh·∫≠n v√¨ c√≥ ch·ª©a t·ª´ kh√≥a "napavatar"
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default BankTransactionsPage; 